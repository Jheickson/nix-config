# NixOS System Configuration
# This file defines the system-wide configuration for NixOS.
# For detailed documentation, see:
# - configuration.nix(5) man page
# - NixOS manual (run 'nixos-help')

{ inputs, config, pkgs, ... }:

{
  # ============================================================================
  # IMPORTS
  # ============================================================================
  imports = [
    # Hardware configuration generated by nixos-generate-config
    ./hardware-configuration.nix
    
    # Home Manager integration
    inputs.home-manager.nixosModules.home-manager
    
    # System modules
    ./packages.nix
    ./stylix.nix
    ./upower.nix
    ./docker.nix
    ./steam.nix
    ./xautolock.nix
    ./vial.nix
    # ./mysql.nix  # Disabled - uncomment to enable MySQL
  ];

  # ============================================================================
  # HOME MANAGER
  # ============================================================================
  home-manager = {
    extraSpecialArgs = { inherit inputs; };
    backupFileExtension = "hm-backup"; # Prevents Stylix conflicts
    users.felipe = import ../home-manager/home.nix;
  };

  # ============================================================================
  # BOOT & LOADER
  # ============================================================================
  boot = {
    loader = {
      systemd-boot.enable = true;
      efi.canTouchEfiVariables = true;
    };
  };

  # ============================================================================
  # NETWORKING
  # ============================================================================
  networking = {
    hostName = "nixos";
    networkmanager.enable = true;
    
    # Wireless support (uncomment if needed)
    # wireless.enable = true;
    
    # Proxy configuration (uncomment and configure if needed)
    # proxy.default = "http://user:password@proxy:port/";
    # proxy.noProxy = "127.0.0.1,localhost,internal.domain";
  };

  # ============================================================================
  # LOCALIZATION
  # ============================================================================
  time.timeZone = "America/Santarem";

  i18n = {
    defaultLocale = "en_US.UTF-8";
    
    extraLocaleSettings = {
      LC_ADDRESS = "pt_BR.UTF-8";
      LC_IDENTIFICATION = "pt_BR.UTF-8";
      LC_MEASUREMENT = "pt_BR.UTF-8";
      LC_MONETARY = "pt_BR.UTF-8";
      LC_NAME = "pt_BR.UTF-8";
      LC_NUMERIC = "pt_BR.UTF-8";
      LC_PAPER = "pt_BR.UTF-8";
      LC_TELEPHONE = "pt_BR.UTF-8";
      LC_TIME = "pt_BR.UTF-8";
    };
  };

  # ============================================================================
  # DISPLAY & WINDOW MANAGEMENT
  # ============================================================================
  services = {
    # X11 configuration
    xserver = {
      enable = true;
      
      # Window manager
      windowManager.i3.enable = true;
      
      # Keyboard layout
      xkb = {
        layout = "us";
        variant = "colemak_dh_wide";
        options = "caps:backspace, backspace:caps";
      };
    };

    # Display manager
    displayManager.defaultSession = "none+i3";

    # Input devices
    libinput = {
      mouse = {
        accelProfile = "flat";
        transformationMatrix = "1 0 0 0 2 0 0 0 1"; # 2x vertical speed
      };
    };
  };

  # ============================================================================
  # SERVICES
  # ============================================================================
  services = {
    # Printing
    printing.enable = true;
    
    # Audio
    # pulseaudio.enable = true;
    
    # PipeWire (audio server)
    pipewire = {
      enable = false;
      alsa = {
        enable = true;
        support32Bit = true;
      };
      pulse.enable = true;
      jack.enable = true;
    };
    
    # Disk management
    udisks2.enable = true;
  };

  # ============================================================================
  # SECURITY
  # ============================================================================
  security.rtkit.enable = true;

  # ============================================================================
  # USER ACCOUNTS
  # ============================================================================
  users.users.felipe = {
    isNormalUser = true;
    description = "felipe";
    extraGroups = [
      "networkmanager"
      "wheel"
      "docker"
    ];
    packages = with pkgs; [
      kdePackages.kate
      # thunderbird  # Disabled - uncomment to enable
    ];
  };

  # ============================================================================
  # PROGRAMS
  # ============================================================================
  programs = {
    firefox.enable = true;
    
    # GPG agent (uncomment if needed)
    # gnupg.agent = {
    #   enable = true;
    #   enableSSHSupport = true;
    # };
    
    # MTR network diagnostic tool (uncomment if needed)
    # mtr.enable = true;
  };

  # ============================================================================
  # NIX CONFIGURATION
  # ============================================================================
  nixpkgs = {
    config.allowUnfree = true;
    config.permittedInsecurePackages = [
      "googleearth-pro-7.3.6.10201"
    ];
  };

  nix = {
    # Enable flakes
    settings.experimental-features = [
      "nix-command"
      "flakes"
    ];
    
    # Set nixpkgs path
    nixPath = [ "nixpkgs = ${inputs.nixpkgs}" ];
    
    # Automatic garbage collection
    gc = {
      automatic = true;
      dates = "weekly";
      options = "--delete-older-than 30d";
    };
  };

  # ============================================================================
  # SYSTEM PACKAGES
  # ============================================================================
  environment.systemPackages = with pkgs; [
    home-manager
    micro
    git
    vscode
    inputs.zen-browser.packages."${system}".default
  ];

  # ============================================================================
  # FIREWALL & SSH
  # ============================================================================
  # SSH daemon (uncomment to enable)
  # services.openssh.enable = true;
  
  # Firewall configuration (uncomment and configure as needed)
  # networking.firewall.allowedTCPPorts = [ ... ];
  # networking.firewall.allowedUDPPorts = [ ... ];
  # networking.firewall.enable = false;

  # ============================================================================
  # SYSTEM STATE
  # ============================================================================
  # This determines the NixOS release for stateful data compatibility.
  # Only change after reading the documentation.
  system.stateVersion = "24.05";
}
